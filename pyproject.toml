[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "eclipsemoon-ai"
version = "0.1.0"
description = "ECLIPSEMOON AI Protocol Framework"
readme = "README.md"
authors = [
    {name = "ECLIPSEMOON", email = "contact@eclipsemoon.ai"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.10"
dependencies = [
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
    "cryptography>=38.0.0",
    "numpy>=1.23.0",
    "pandas>=1.5.0",
    "pydantic>=1.10.0",
    "pyyaml>=6.0",
    "scikit-learn>=1.1.0",
    "solana>=0.29.0",
    "web3>=6.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.28.0",
    "websockets>=10.4",
    "pyserum>=0.5.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "python-telegram-bot>=13.0",
    "schedule>=1.1.0",
    "rich>=12.0.0",
    "typer>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.10.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
    "mypy>=0.990",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=2.20.0",
]
ai = [
    "tensorflow>=2.10.0",
    "torch>=1.13.0",
    "transformers>=4.24.0",
    "xgboost>=1.7.0",
    "lightgbm>=3.3.0",
]
visualization = [
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "plotly>=5.10.0",
    "dash>=2.7.0",
]
docs = [
    "sphinx>=5.3.0",
    "sphinx-rtd-theme>=1.1.0",
    "sphinx-autodoc-typehints>=1.19.0",
]

[project.urls]
"Homepage" = "https://github.com/ECLIPSEMOON/eclipsemoon-ai"
"Bug Tracker" = "https://github.com/ECLIPSEMOON/eclipsemoon-ai/issues"
"Documentation" = "https://docs.eclipsemoon.ai"

[project.scripts]
eclipsemoon = "eclipsemoon.main:cli_entry_point"

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["eclipsemoon"]
omit = ["tests/*", "docs/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

console.log("This is a Node.js representation of the pyproject.toml file. In a real implementation, this would be a plain text file.");